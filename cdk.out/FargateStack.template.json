{
 "Description": "PoC NextJS and Fargate",
 "Resources": {
  "FargateNextjs1E9565CA": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "FargateStack/FargateNextjs"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateNextjs/Resource"
   }
  },
  "FargateNextjsPublicSubnet1SubnetF36CF5D5": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "FargateNextjs1E9565CA"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "FargateStack/FargateNextjs/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateNextjs/PublicSubnet1/Subnet"
   }
  },
  "FargateNextjsPublicSubnet1RouteTable6A7EDFB2": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "FargateNextjs1E9565CA"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "FargateStack/FargateNextjs/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateNextjs/PublicSubnet1/RouteTable"
   }
  },
  "FargateNextjsPublicSubnet1RouteTableAssociation8BEEC06C": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "FargateNextjsPublicSubnet1RouteTable6A7EDFB2"
    },
    "SubnetId": {
     "Ref": "FargateNextjsPublicSubnet1SubnetF36CF5D5"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateNextjs/PublicSubnet1/RouteTableAssociation"
   }
  },
  "FargateNextjsPublicSubnet1DefaultRoute1BB44272": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "FargateNextjsPublicSubnet1RouteTable6A7EDFB2"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "FargateNextjsIGW49CE7223"
    }
   },
   "DependsOn": [
    "FargateNextjsVPCGWE1DF8918"
   ],
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateNextjs/PublicSubnet1/DefaultRoute"
   }
  },
  "FargateNextjsPublicSubnet1EIP1E2E27E7": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "FargateStack/FargateNextjs/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateNextjs/PublicSubnet1/EIP"
   }
  },
  "FargateNextjsPublicSubnet1NATGateway4D1FF63A": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "SubnetId": {
     "Ref": "FargateNextjsPublicSubnet1SubnetF36CF5D5"
    },
    "AllocationId": {
     "Fn::GetAtt": [
      "FargateNextjsPublicSubnet1EIP1E2E27E7",
      "AllocationId"
     ]
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "FargateStack/FargateNextjs/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateNextjs/PublicSubnet1/NATGateway"
   }
  },
  "FargateNextjsPublicSubnet2SubnetFDB1D52A": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "FargateNextjs1E9565CA"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "FargateStack/FargateNextjs/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateNextjs/PublicSubnet2/Subnet"
   }
  },
  "FargateNextjsPublicSubnet2RouteTable9853ED88": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "FargateNextjs1E9565CA"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "FargateStack/FargateNextjs/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateNextjs/PublicSubnet2/RouteTable"
   }
  },
  "FargateNextjsPublicSubnet2RouteTableAssociation0B010FCE": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "FargateNextjsPublicSubnet2RouteTable9853ED88"
    },
    "SubnetId": {
     "Ref": "FargateNextjsPublicSubnet2SubnetFDB1D52A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateNextjs/PublicSubnet2/RouteTableAssociation"
   }
  },
  "FargateNextjsPublicSubnet2DefaultRoute8417D56F": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "FargateNextjsPublicSubnet2RouteTable9853ED88"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "FargateNextjsIGW49CE7223"
    }
   },
   "DependsOn": [
    "FargateNextjsVPCGWE1DF8918"
   ],
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateNextjs/PublicSubnet2/DefaultRoute"
   }
  },
  "FargateNextjsPublicSubnet2EIP9CB215A7": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "FargateStack/FargateNextjs/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateNextjs/PublicSubnet2/EIP"
   }
  },
  "FargateNextjsPublicSubnet2NATGateway46906B73": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "SubnetId": {
     "Ref": "FargateNextjsPublicSubnet2SubnetFDB1D52A"
    },
    "AllocationId": {
     "Fn::GetAtt": [
      "FargateNextjsPublicSubnet2EIP9CB215A7",
      "AllocationId"
     ]
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "FargateStack/FargateNextjs/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateNextjs/PublicSubnet2/NATGateway"
   }
  },
  "FargateNextjsPrivateSubnet1SubnetBDB8E0C5": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "FargateNextjs1E9565CA"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "FargateStack/FargateNextjs/PrivateSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateNextjs/PrivateSubnet1/Subnet"
   }
  },
  "FargateNextjsPrivateSubnet1RouteTable5D1CB703": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "FargateNextjs1E9565CA"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "FargateStack/FargateNextjs/PrivateSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateNextjs/PrivateSubnet1/RouteTable"
   }
  },
  "FargateNextjsPrivateSubnet1RouteTableAssociation6246D7F6": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "FargateNextjsPrivateSubnet1RouteTable5D1CB703"
    },
    "SubnetId": {
     "Ref": "FargateNextjsPrivateSubnet1SubnetBDB8E0C5"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateNextjs/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "FargateNextjsPrivateSubnet1DefaultRoute0C3BCA81": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "FargateNextjsPrivateSubnet1RouteTable5D1CB703"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "FargateNextjsPublicSubnet1NATGateway4D1FF63A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateNextjs/PrivateSubnet1/DefaultRoute"
   }
  },
  "FargateNextjsPrivateSubnet2Subnet7F06468F": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "FargateNextjs1E9565CA"
    },
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "FargateStack/FargateNextjs/PrivateSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateNextjs/PrivateSubnet2/Subnet"
   }
  },
  "FargateNextjsPrivateSubnet2RouteTable0DFD84E1": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "FargateNextjs1E9565CA"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "FargateStack/FargateNextjs/PrivateSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateNextjs/PrivateSubnet2/RouteTable"
   }
  },
  "FargateNextjsPrivateSubnet2RouteTableAssociation77C7766E": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "FargateNextjsPrivateSubnet2RouteTable0DFD84E1"
    },
    "SubnetId": {
     "Ref": "FargateNextjsPrivateSubnet2Subnet7F06468F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateNextjs/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "FargateNextjsPrivateSubnet2DefaultRoute2335339B": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "FargateNextjsPrivateSubnet2RouteTable0DFD84E1"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "FargateNextjsPublicSubnet2NATGateway46906B73"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateNextjs/PrivateSubnet2/DefaultRoute"
   }
  },
  "FargateNextjsIGW49CE7223": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "FargateStack/FargateNextjs"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateNextjs/IGW"
   }
  },
  "FargateNextjsVPCGWE1DF8918": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "VpcId": {
     "Ref": "FargateNextjs1E9565CA"
    },
    "InternetGatewayId": {
     "Ref": "FargateNextjsIGW49CE7223"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateNextjs/VPCGW"
   }
  },
  "ClusterNextjs6E572403": {
   "Type": "AWS::ECS::Cluster",
   "Metadata": {
    "aws:cdk:path": "FargateStack/ClusterNextjs/Resource"
   }
  },
  "RepoNextjsBF548028": {
   "Type": "AWS::ECR::Repository",
   "Properties": {
    "ImageScanningConfiguration": {
     "ScanOnPush": true
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "FargateStack/RepoNextjs/Resource"
   }
  },
  "FargateServiceLBB353E155": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "FargateServiceLBSecurityGroup5F444C78",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Ref": "FargateNextjsPublicSubnet1SubnetF36CF5D5"
     },
     {
      "Ref": "FargateNextjsPublicSubnet2SubnetFDB1D52A"
     }
    ],
    "Type": "application"
   },
   "DependsOn": [
    "FargateNextjsPublicSubnet1DefaultRoute1BB44272",
    "FargateNextjsPublicSubnet2DefaultRoute8417D56F"
   ],
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateService/LB/Resource"
   }
  },
  "FargateServiceLBSecurityGroup5F444C78": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatically created Security Group for ELB FargateStackFargateServiceLB9049C732",
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow from anyone on port 80",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Ref": "FargateNextjs1E9565CA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateService/LB/SecurityGroup/Resource"
   }
  },
  "FargateServiceLBSecurityGrouptoFargateStackFargateServiceSecurityGroupB04BEC818087ECE76F": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "GroupId": {
     "Fn::GetAtt": [
      "FargateServiceLBSecurityGroup5F444C78",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "Description": "Load balancer to target",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "FargateServiceSecurityGroup262B61DD",
      "GroupId"
     ]
    },
    "FromPort": 80,
    "ToPort": 80
   },
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateService/LB/SecurityGroup/to FargateStackFargateServiceSecurityGroupB04BEC81:80"
   }
  },
  "FargateServiceLBPublicListener4B4929CA": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "FargateServiceLBPublicListenerECSGroupBE57E081"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "FargateServiceLBB353E155"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateService/LB/PublicListener/Resource"
   }
  },
  "FargateServiceLBPublicListenerECSGroupBE57E081": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "Port": 80,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "ip",
    "VpcId": {
     "Ref": "FargateNextjs1E9565CA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateService/LB/PublicListener/ECSGroup/Resource"
   }
  },
  "FargateServiceTaskDefTaskRole8CDCF85E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateService/TaskDef/TaskRole/Resource"
   }
  },
  "FargateServiceTaskDef940E3A80": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Cpu": 512,
      "Essential": true,
      "Image": {
       "Fn::Join": [
        "",
        [
         {
          "Fn::Select": [
           4,
           {
            "Fn::Split": [
             ":",
             {
              "Fn::GetAtt": [
               "RepoNextjsBF548028",
               "Arn"
              ]
             }
            ]
           }
          ]
         },
         ".dkr.ecr.",
         {
          "Fn::Select": [
           3,
           {
            "Fn::Split": [
             ":",
             {
              "Fn::GetAtt": [
               "RepoNextjsBF548028",
               "Arn"
              ]
             }
            ]
           }
          ]
         },
         ".",
         {
          "Ref": "AWS::URLSuffix"
         },
         "/",
         {
          "Ref": "RepoNextjsBF548028"
         },
         ":latest"
        ]
       ]
      },
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "FargateServiceTaskDefwebLogGroup71FAF541"
        },
        "awslogs-stream-prefix": "FargateService",
        "awslogs-region": {
         "Ref": "AWS::Region"
        }
       }
      },
      "Memory": 1024,
      "Name": "web",
      "PortMappings": [
       {
        "ContainerPort": 80,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "512",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "FargateServiceTaskDefExecutionRole9194820E",
      "Arn"
     ]
    },
    "Family": "FargateStackFargateServiceTaskDefABBD8B00",
    "Memory": "1024",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "FargateServiceTaskDefTaskRole8CDCF85E",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateService/TaskDef/Resource"
   }
  },
  "FargateServiceTaskDefwebLogGroup71FAF541": {
   "Type": "AWS::Logs::LogGroup",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateService/TaskDef/web/LogGroup/Resource"
   }
  },
  "FargateServiceTaskDefExecutionRole9194820E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateService/TaskDef/ExecutionRole/Resource"
   }
  },
  "FargateServiceTaskDefExecutionRoleDefaultPolicy827E7CA2": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "ecr:BatchCheckLayerAvailability",
        "ecr:GetDownloadUrlForLayer",
        "ecr:BatchGetImage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "RepoNextjsBF548028",
         "Arn"
        ]
       }
      },
      {
       "Action": "ecr:GetAuthorizationToken",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "FargateServiceTaskDefwebLogGroup71FAF541",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "FargateServiceTaskDefExecutionRoleDefaultPolicy827E7CA2",
    "Roles": [
     {
      "Ref": "FargateServiceTaskDefExecutionRole9194820E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateService/TaskDef/ExecutionRole/DefaultPolicy/Resource"
   }
  },
  "FargateServiceECC8084D": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Ref": "ClusterNextjs6E572403"
    },
    "DeploymentConfiguration": {
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "DesiredCount": 1,
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "FARGATE",
    "LoadBalancers": [
     {
      "ContainerName": "web",
      "ContainerPort": 80,
      "TargetGroupArn": {
       "Ref": "FargateServiceLBPublicListenerECSGroupBE57E081"
      }
     }
    ],
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "FargateServiceSecurityGroup262B61DD",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Ref": "FargateNextjsPrivateSubnet1SubnetBDB8E0C5"
       },
       {
        "Ref": "FargateNextjsPrivateSubnet2Subnet7F06468F"
       }
      ]
     }
    },
    "TaskDefinition": {
     "Ref": "FargateServiceTaskDef940E3A80"
    }
   },
   "DependsOn": [
    "FargateServiceLBPublicListenerECSGroupBE57E081",
    "FargateServiceLBPublicListener4B4929CA"
   ],
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateService/Service/Service"
   }
  },
  "FargateServiceSecurityGroup262B61DD": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "FargateStack/FargateService/Service/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "FargateNextjs1E9565CA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateService/Service/SecurityGroup/Resource"
   }
  },
  "FargateServiceSecurityGroupfromFargateStackFargateServiceLBSecurityGroup0598A7EA802C0FC559": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "Load balancer to target",
    "FromPort": 80,
    "GroupId": {
     "Fn::GetAtt": [
      "FargateServiceSecurityGroup262B61DD",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "FargateServiceLBSecurityGroup5F444C78",
      "GroupId"
     ]
    },
    "ToPort": 80
   },
   "Metadata": {
    "aws:cdk:path": "FargateStack/FargateService/Service/SecurityGroup/from FargateStackFargateServiceLBSecurityGroup0598A7EA:80"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31TXW/bMAz8LXtXVKTD1uc07YoAxWYkRV8DWmY9No5kiFKKwPB/HyXHcfqBPel4PknknXytv9/o+Td445mpdrOGSt1tApidEmrbobnW3XNr1PLFPhdLVcSyIbOJpcWQuAmtXQz4BGWDEz9xC2ZnCAI5exYncL8q0vIbwgMEfIOjKjwdBE4Hr2xAL3gUDJ2cqkWQXv/u0Qa1QRM9heODd7HNPfyXuK89Mn+iVzbzvULDuls2keX2pBrhL/A1pKl4d4cvZGmc6SPjbACy6C+4094N+gOZwacBpuv8FpgxsL5zZod+tYc62SYmyDfdrbF1TMH54y0wqqnMfp6r3Pi2hZBMY71oW8kr+/7ooLqFBqzB6kMj2AAHMo0oyqwgWx8k+K93Zzve1Zc6EpfsSTPii+9PcrNkOUZyUfaKYC9zuuEF5bVwsi9POKBeNa6WXB5dfT5ixH0vprCLXgbKvskzrmWQpPkTQxuHZzpKUqTOVjmYXllXoX7lq8P8p57/kB/ilYlmPtpAe9TrYf0Hhfx2wSwDAAA="
   },
   "Metadata": {
    "aws:cdk:path": "FargateStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "FargateServiceLoadBalancerDNS9433D5F6": {
   "Value": {
    "Fn::GetAtt": [
     "FargateServiceLBB353E155",
     "DNSName"
    ]
   }
  },
  "FargateServiceServiceURL47701F45": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "http://",
      {
       "Fn::GetAtt": [
        "FargateServiceLBB353E155",
        "DNSName"
       ]
      }
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}